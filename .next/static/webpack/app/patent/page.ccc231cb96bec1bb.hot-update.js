"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/patent/page",{

/***/ "(app-pages-browser)/./lib/features/analyzeSlice.tsx":
/*!***************************************!*\
  !*** ./lib/features/analyzeSlice.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeSlice: function() { return /* binding */ analyzeSlice; },\n/* harmony export */   folders: function() { return /* binding */ folders; },\n/* harmony export */   patents: function() { return /* binding */ patents; },\n/* harmony export */   selectedPatent: function() { return /* binding */ selectedPatent; },\n/* harmony export */   storeFile: function() { return /* binding */ storeFile; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\n// Define the initial state using that type\nconst initialState = {\n    selectedPatent: {\n        title: \"\",\n        folder: \"\",\n        tags: [\n            \"\"\n        ],\n        status: \"\",\n        patentId: \"\",\n        url: \"\",\n        problem: \"\",\n        problemKeywords: [],\n        solution: \"\",\n        solutionKeywords: [],\n        summary: \"\",\n        fulltext: \"\"\n    },\n    patents: [\n        {\n            title: \"Microfluidic device for deformable beads enrichment and self-regulated ordering and encapsulation in droplets\",\n            folder: \"Microfluidics\",\n            tags: [\n                \"Microfluidics\",\n                \"Droplets\"\n            ],\n            status: \"Pending\",\n            patentId: \"US20210331174A1\",\n            url: \"/examples/US20210331174A1.pdf\",\n            problem: \"The patent addresses the challenges of achieving robust ordered delivery of deformable beads in microfluidic devices, as well as the difficulty in achieving high percentage singlet encapsulation with a constant pressure source system.\",\n            problemKeywords: [\n                \"microfluidics\",\n                \"beads\",\n                \"singlet encapsulation\"\n            ],\n            solution: \"The inventors developed a microfluidic device that can reliably achieve high percentage singlet encapsulation with a constant pressure source system. This was achieved through the development of a pinch and reservoir sequence system for beads concentrating and delivery frequency stabilizing, as well as the design of a long funnel to guide and align deformable beads into a single row, and a core design to achieve self-regulated beads in droplets encapsulation within a constant pressure system.\",\n            solutionKeywords: [\n                \"pinch and reservoir\",\n                \"funnel\"\n            ],\n            summary: \"This invention introduces a novel microfluidic device designed to improve the handling and processing of deformable beads in a controlled environment. The device features a series of inlets and microfluidic channels that facilitate the encapsulation of these beads into droplets, a method that is crucial for advancing laboratory assays such as single-cell analyses and other microreactor applications.\",\n            fulltext: \"\"\n        },\n        {\n            title: \"Method and Apparatus for Image-Based Navigation\",\n            folder: \"Skeletal Navigation\",\n            tags: [\n                \"MapNav\",\n                \"Surgical\"\n            ],\n            status: \"Pending\",\n            patentId: \"US20240024042A1\",\n            url: \"/examples/US20240024042A1.pdf\",\n            problem: \"\",\n            problemKeywords: [],\n            solution: \"\",\n            solutionKeywords: [],\n            summary: \"\",\n            fulltext: \"\"\n        },\n        {\n            title: \"Single sided light-actuated microfluidic device with integrated mesh ground\",\n            folder: \"Microfluidics\",\n            tags: [\n                \"Microfluidics\",\n                \"Optowetting\"\n            ],\n            status: \"Active\",\n            patentId: \"US9815056B2\",\n            url: \"/examples/US9815056.pdf\",\n            problem: \"\",\n            problemKeywords: [],\n            solution: \"\",\n            solutionKeywords: [],\n            summary: \"\",\n            fulltext: \"\"\n        }\n    ],\n    folders: [\n        \"Microfluidics\",\n        \"Skeletal Navigation\"\n    ]\n};\nconst analyzeSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"analyze\",\n    // `createSlice` will infer the state type from the `initialState` argument\n    initialState,\n    reducers: {\n        // Use the PayloadAction type to declare the contents of `action.payload`\n        storeFile: (state, action)=>{\n            state.selectedPatent = action.payload;\n        }\n    }\n});\nconst { storeFile } = analyzeSlice.actions;\nconst selectedPatent = (state)=>state.analyze.selectedPatent;\nconst patents = (state)=>state.analyze.patents;\nconst folders = (state)=>state.analyze.folders;\n/* harmony default export */ __webpack_exports__[\"default\"] = (analyzeSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/features/analyzeSlice.tsx\n"));

/***/ })

});